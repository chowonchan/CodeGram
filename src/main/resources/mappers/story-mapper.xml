<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.kh.cgram.story.mapper.StoryMapper">

<!-- 팔로우한 사용자들의 24시간 이내 스토리 목록 조회 -->
    <select id="getFollowingStories" resultType="Story">
        SELECT 
            S.STORY_NO, S.IMG_PATH, S.CREATED_AT,
            M.MEMBER_NO, M.MEMBER_NICKNAME, M.PROFILE_IMG,
            NVL2(SR.STORY_NO, 'Y', 'N') AS STORY_CHECK,
            S.READ_COUNT
        FROM STORY S
        JOIN MEMBER M ON S.MEMBER_NO = M.MEMBER_NO
        LEFT JOIN STORY_READ SR ON S.STORY_NO = SR.STORY_NO 
            AND SR.MEMBER_NO = #{memberNo}
        WHERE S.STORY_DEL_FL = 'N'
        AND S.CREATED_AT >= CURRENT_DATE - 1 
        AND M.MEMBER_NO IN (
            SELECT FOLLOWING_NO 
            FROM FOLLOW 
            WHERE FOLLOWER_NO = #{memberNo}
        )
        ORDER BY 
            CASE WHEN SR.STORY_NO IS NULL THEN 0 ELSE 1 END,
            S.CREATED_AT DESC
    </select>

    <!-- 특정 스토리 상세 조회 -->
    <select id="getStoryDetail" resultType="Story">
        SELECT 
            S.STORY_NO, S.IMG_PATH, S.CREATED_AT,
            M.MEMBER_NO, M.MEMBER_NICKNAME, M.PROFILE_IMG,
            S.READ_COUNT,
            (SELECT COUNT(*) FROM STORY_LIKE WHERE STORY_NO = S.STORY_NO) AS LIKE_COUNT,
            NVL2(
                (SELECT 'Y' FROM STORY_LIKE 
                 WHERE STORY_NO = S.STORY_NO 
                 AND MEMBER_NO = #{memberNo}), 
                'Y', 'N'
            ) AS STORY_LIKED
        FROM STORY S
        JOIN MEMBER M ON S.MEMBER_NO = M.MEMBER_NO
        WHERE S.STORY_NO = #{storyNo}
        AND S.STORY_DEL_FL = 'N'
    </select>

    <!-- 스토리 읽음 처리 -->
    <insert id="insertStoryRead">
        INSERT INTO STORY_READ (MEMBER_NO, STORY_NO)
        VALUES (#{memberNo}, #{storyNo})
    </insert>

    <!-- 스토리 조회수 증가 -->
    <update id="updateReadCount">
        UPDATE STORY
        SET READ_COUNT = READ_COUNT + 1
        WHERE STORY_NO = #{storyNo}
    </update>

	<!-- 회원 닉네임으로 회원번호 조회 -->
	<select id="getMemberNoByNickname" resultType="_int">
	    SELECT MEMBER_NO
	    FROM MEMBER
	    WHERE MEMBER_NICKNAME = #{memberNickname}
	</select>
<!-- 	
	좋아요 추가
	<insert id="insertStoryLike">
	    INSERT INTO STORY_LIKE (MEMBER_NO, STORY_NO)
	    VALUES (#{memberNo}, #{storyNo})
	</insert>
	
	좋아요 취소
	<delete id="deleteStoryLike">
	    DELETE FROM STORY_LIKE
	    WHERE MEMBER_NO = #{memberNo}
	    AND STORY_NO = #{storyNo}
	</delete>
	 -->
    <!-- 팔로우한 사용자의 스토리 존재 여부 확인 -->
    <select id="hasNewStories" resultType="_int">
        SELECT CASE 
            WHEN COUNT(*) > 0 THEN 1 
            ELSE 0 
        END
        FROM STORY S
        WHERE S.MEMBER_NO IN (
            SELECT FOLLOWING_NO 
            FROM FOLLOW 
            WHERE FOLLOWER_NO = #{memberNo}
        )
        AND S.STORY_DEL_FL = 'N'
        AND S.CREATED_AT >= CURRENT_DATE - 1
        AND NOT EXISTS (
            SELECT 1 
            FROM STORY_READ SR 
            WHERE SR.STORY_NO = S.STORY_NO 
            AND SR.MEMBER_NO = #{memberNo}
        )
    </select>




</mapper>