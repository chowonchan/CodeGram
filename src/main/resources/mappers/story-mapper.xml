<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.kh.cgram.story.mapper.StoryMapper">

    <!-- 회원 닉네임으로 회원번호 조회 -->
    <select id="getMemberNo" resultType="_int">
        SELECT MEMBER_NO
        FROM   MEMBER
        WHERE  MEMBER_NICKNAME = #{memberNickname}
    </select>

    <!-- 스토리 상세 조회 -->
    <select id="storyDetail" resultType="Story">
        SELECT
            S.STORY_NO, S.IMG_PATH, S.IMG_RENAME, S.CREATED_AT,
            M.MEMBER_NO, M.MEMBER_NICKNAME, M.PROFILE_IMG,
            (SELECT COUNT(*) FROM STORY_LIKE WHERE STORY_NO = S.STORY_NO) AS LIKE_COUNT,
            NVL2(
                    (SELECT 'Y' FROM STORY_LIKE
                     WHERE STORY_NO = S.STORY_NO
                       AND MEMBER_NO = #{memberNo}),
                    'Y', 'N'
            ) AS STORY_LIKED
        FROM STORY S
                 JOIN MEMBER M ON S.MEMBER_NO = M.MEMBER_NO
        WHERE S.STORY_NO = #{storyNo}
          AND S.STORY_DEL_FL = 'N'
    </select>

    <!-- 스토리 작성 -->
    <insert id="storyInsert" parameterType="Story" useGeneratedKeys="true">
        <selectKey order="BEFORE" resultType="_int" keyProperty="storyNo">
            <!-- 제목, 내용, 작성자 회원 번호, 게시판 종류, + 게시글 번호 -->
            SELECT SEQ_STORY_NO.NEXTVAL FROM DUAL
        </selectKey>

        INSERT INTO STORY (STORY_NO, IMG_PATH, CREATED_AT, STORY_DEL_FL, MEMBER_NO, IMG_RENAME)
        VALUES (#{storyNo}, #{imgPath}, DEFAULT, DEFAULT, #{memberNo}, #{imgRename})
    </insert>


    <update id="storyDelete">
        UPDATE STORY
        SET STORY_DEL_FL = 'Y'
        WHERE STORY_NO = #{storyNo}
        AND MEMBER_NO = #{memberNo}
    </update>


    
    <!-- 아래는 스토리 확인을 위한 구문들 -->
    
    <!-- 스토리를 이미 읽었는지 확인 -->
    <select id="checkStory" resultType="_int">
    	SELECT
    		COUNT(*)
    	FROM
    		"STORY_READ"
    	WHERE
    		MEMBER_NO = #{memberNo}
    	AND
    		STORY_NO IN (
	    		SELECT S.STORY_NO
				FROM STORY S
				JOIN MEMBER M ON (S.MEMBER_NO = M.MEMBER_NO)
				WHERE STORY_DEL_FL ='N'
				AND M.MEMBER_NICKNAME = #{memberNickname}
				AND S.CREATED_AT > CURRENT_DATE - 1 )

    </select>
    
    <!-- memberNickname으로 24시간 내 스토리 갯수 조회 -->
    <select id="selectStoryNo">
		SELECT COUNT(S.STORY_NO)
		FROM STORY S
		JOIN MEMBER M ON (S.MEMBER_NO = M.MEMBER_NO)
		WHERE STORY_DEL_FL ='N'
		AND M.MEMBER_NICKNAME = #{memberNickname}
		AND S.CREATED_AT > CURRENT_DATE - 1
    </select>
    
    
    <!-- 팔로우한 회원의 24시간 내 스토리 존재 여부 확인 -->
    <select id="selectStoryHas">
    	SELECT count(*)
		FROM STORY S1
		JOIN MEMBER M1 ON (S1.MEMBER_NO = M1.MEMBER_NO)
		WHERE S1.STORY_DEL_FL = 'N'
		AND S1.CREATED_AT > CURRENT_DATE - 1
		AND	M1.MEMBER_NO IN (
			SELECT FOLLOWER_MEMBER
			FROM FOLLOW
			WHERE FOLLOWING_MEMBER = #{memberNo})
    </select>
    
    <!-- 로그인한 회원이 팔로우한 회원들의 24시간 이내의 스토리 목록 조회 -->
    <select id="selectStoryList" resultType="Story">
		SELECT 
		       MEMBER_NICKNAME,
		       PROFILE_IMG
		       ,COUNT(*) - SUM(STORY_CHECK) STORY_COUNT
		FROM (
		    SELECT S1.STORY_NO,
		           M1.MEMBER_NICKNAME,
		           M1.PROFILE_IMG,
		           S1.CREATED_AT
		           
	           	,(	SELECT COUNT(*)
					FROM STORY_READ SR
					WHERE SR.MEMBER_NO = #{memberNo}
					AND SR.STORY_NO = S1.STORY_NO
					) STORY_CHECK
		    FROM STORY S1
		    JOIN MEMBER M1 ON (S1.MEMBER_NO = M1.MEMBER_NO)
		    WHERE S1.STORY_DEL_FL = 'N'
		      AND S1.CREATED_AT > CURRENT_DATE - 1
		      AND M1.MEMBER_NO IN (
		           SELECT FOLLOWER_MEMBER
		           FROM FOLLOW
		           WHERE FOLLOWING_MEMBER = #{memberNo}
		      )
		)
		GROUP BY  MEMBER_NICKNAME, PROFILE_IMG
		ORDER BY MEMBER_NICKNAME
    </select>
    
    



</mapper>